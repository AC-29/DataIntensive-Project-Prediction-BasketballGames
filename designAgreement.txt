[game_data.json, team_data.json, player_data.json, stats_data.json, seasonavg_data.json]
Change range according to the number of info pages.

Current data:
    - All players in all seasons --> Main team they played (Pippen --> Bulls / He finished in Portland)

- Scale all averages per 36 minutes --> Same conditions for all players (Idea?)

How to build team rosters per season:
- Get a player
- Iterate over all the matches a player has played dividing them by seasons
- Reduce over teams, getting a count of the number of games he played per season in each team
- Get the maximum and assign the player to that team during that season
- Once we have the player assigned for all the seasons he has played, we start building the roster
- Request to the API in order to get the player averages per each season he has played
- Assign averages and player ID to the team in that season
- Assign as final roster the 12 players with more minutes per team

team {season: 2018, roster: {avg1}, {avg2}, ...}
